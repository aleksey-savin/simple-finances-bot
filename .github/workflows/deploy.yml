name: Deploy Bot

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  BACKUP_DIR: /opt/backups/simple-finances-bot/pre-deploy
  APP_DATA_DIR: /opt/simple-finances-bot/data # Постоянная директория для данных

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Prepare workspace
        run: |
          # Создаем постоянную директорию для данных если её нет
          mkdir -p $APP_DATA_DIR

          # Проверяем backup директорию
          if [ ! -d "$BACKUP_DIR" ]; then
            echo "❌ Backup directory not found"
            exit 1
          fi

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create backup timestamp
        id: backup-timestamp
        run: |
          timestamp=$(date +%Y%m%d_%H%M%S)
          echo "timestamp=$timestamp" >> $GITHUB_OUTPUT
          echo "DEPLOY_TIMESTAMP=$timestamp" >> $GITHUB_ENV

      - name: Backup current state
        id: backup
        run: |
          if [ -f "$APP_DATA_DIR/expenses.db" ]; then
            cp "$APP_DATA_DIR/expenses.db" "$BACKUP_DIR/expenses_${{ env.DEPLOY_TIMESTAMP }}.db"
            echo "backup_created=true" >> $GITHUB_OUTPUT
            echo "✅ Pre-deploy backup created"
          else
            echo "backup_created=false" >> $GITHUB_OUTPUT
            echo "⚠️ No database file found to backup"
          fi

      - name: Setup environment
        run: |
          echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" > .env
          echo "DB_PATH=$APP_DATA_DIR/expenses.db" >> .env

      - name: Stop running containers
        run: docker compose down
        continue-on-error: true

      - name: Build and deploy
        id: deploy
        run: |
          echo "Starting deployment..."

          if docker compose up -d --build; then
            echo "deployment_success=true" >> $GITHUB_OUTPUT
            echo "✅ Deployment successful"
          else
            echo "deployment_success=false" >> $GITHUB_OUTPUT
            echo "❌ Deployment failed"
            exit 1
          fi

      - name: Health check
        id: health
        run: |
          echo "Waiting for container to start..."
          sleep 10

          if docker compose ps | grep -q "Up"; then
            echo "health_check=true" >> $GITHUB_OUTPUT
            echo "✅ Container is healthy"
          else
            echo "health_check=false" >> $GITHUB_OUTPUT
            echo "❌ Container health check failed"
            exit 1
          fi

    outputs:
      timestamp: ${{ steps.backup-timestamp.outputs.timestamp }}
      backup_created: ${{ steps.backup.outputs.backup_created }}
      deployment_success: ${{ steps.deploy.outputs.deployment_success }}
      health_check: ${{ steps.health.outputs.health_check }}
